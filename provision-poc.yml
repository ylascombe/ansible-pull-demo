# Explicit gather_facts is not required but we made it to populate hostvars at startup
- hosts: all
  gather_facts: True
  
- hosts: localhost
  tasks:
    - name: Write env_infos file in /etc folder
      copy:
        content: |
          node_role: {{ node_type }}
          env: {{ env }}
        dest: /etc/env_infos
    
    # as expected, will print 4 groups (since all and ungrouped are automatically added):
    #  "groups": {
    #    "all": [
    #        "localhost", 
    #        "ec2-34-248-168-21.eu-west-1.compute.amazonaws.com"
    #    ], 
    #    "me": [
    #        "localhost"
    #    ], 
    #    "remote_vms": [
    #        "ec2-34-248-168-21.eu-west-1.compute.amazonaws.com"
    #    ], 
    #    "ungrouped": []
    #  }
    - name: Print groups var
      debug:
        var: groups
        
        
    # hostvars['localhost'] will behave as expected : localhost hostvars will be printed
    - name: Print hostvars['localhost']
      debug:
        var: hostvars['localhost']
        
    # as expected : 2 entries in hostvars array
    - name: Print hostvars array length
      debug:
        msg: "{{ hostvars | length }}"
        
    # correctly resolved
    - name: Resolve groups['remote_vms'][0]
      debug:
        msg: "{{ groups['remote_vms'][0] }}"
        
    # Print all hostvars if gather_facts have been done (else this task must be moved on a play that refers to remote_vms group)
    - name: Print hostvars[groups['remote_vms'][0]]
      debug:
        var: hostvars[groups['remote_vms'][0]]
        

# In fact, if ansible-pull is runned with an inventory that contains remote VMs group : 
# without specify ansible_connection=ssh for these VMs, the default mode is local : so all tasks will be applied on machine that 
# run ansible-pull and not the remote one.
# Exemple inventory

# [me]
# localhost
# 
# [remote_vms]
# 10.20.30.40    ansible_connection=ssh        ansible_user=ubuntu
# 
# [remote_without_ssh_cnx]
# 10.20.30.41
#
# Actual behavior : 
# - file /tmp/test-file-10.20.30.40.txt will be created on host 10.20.30.40
# - file /tmp/test-file-10.20.30.41.txt will be created on localhost
#
- hosts: remote_vms remote_without_ssh_cnx
  tasks:
    - name: Write test-file.txt in /tmp folder
      copy:
        content: "file content for instance {{ ansible_hostname }}"
        dest: /tmp/test-file-{{ ansible_hostname }}.txt

# Test delegate_to
- hosts: remote_vms[0]
  tasks:
    - name: Create a test file with a delegate_to localhost
      delegate_to: localhost
      copy:
        content: "file content generated with delegate_to localhost"
        dest: /tmp/test-file-delegate-to.txt

- hosts: localhost
  tasks:
    - name: Create a test file with a delegate_to remote_vms[0]
      delegate_to: remote_vms[0]
      copy:
        content: "file content generated with delegate_to remote_vms[0]"
        dest: /tmp/test-file-delegate-to.txt
    
